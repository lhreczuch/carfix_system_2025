openapi: 3.0.3
info:
  title: CARFIX API DOCS
  version: 1.0.0
paths:
  /api/cars:
    get:
      operationId: api_cars_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Car'
          description: ''
    post:
      operationId: api_cars_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Car'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
  /api/cars/{id}:
    get:
      operationId: api_cars_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    put:
      operationId: api_cars_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Car'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    patch:
      operationId: api_cars_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCar'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car'
          description: ''
    delete:
      operationId: api_cars_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/clients:
    get:
      operationId: api_clients_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
          description: ''
    post:
      operationId: api_clients_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
  /api/clients/{id}:
    get:
      operationId: api_clients_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    put:
      operationId: api_clients_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    patch:
      operationId: api_clients_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedClient'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
    delete:
      operationId: api_clients_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/managers:
    get:
      operationId: api_managers_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manager'
          description: ''
    post:
      operationId: api_managers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Manager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Manager'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
          description: ''
  /api/repairs:
    get:
      operationId: api_repairs_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repair'
          description: ''
    post:
      operationId: api_repairs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repair'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repair'
          description: ''
  /api/repairs/{id}:
    get:
      operationId: api_repairs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repair'
          description: ''
    put:
      operationId: api_repairs_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repair'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repair'
          description: ''
    patch:
      operationId: api_repairs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRepair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRepair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRepair'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repair'
          description: ''
    delete:
      operationId: api_repairs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/repairs/{id}/activitylogs:
    get:
      operationId: api_repairs_activitylogs_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairActivityLog'
          description: ''
  /api/repairs/{id}/comments:
    get:
      operationId: api_repairs_comments_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: api_repairs_comments_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/repairs/{id}/comments/{pk2}:
    get:
      operationId: api_repairs_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk2
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: api_repairs_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk2
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/repairs/{id}/images:
    get:
      operationId: api_repairs_images_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairImage'
          description: ''
    post:
      operationId: api_repairs_images_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepairImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepairImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairImage'
          description: ''
  /api/repairs/{id}/images/{pk2}:
    get:
      operationId: api_repairs_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk2
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairImage'
          description: ''
    delete:
      operationId: api_repairs_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: pk2
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/repairs/{id}/worklogs:
    get:
      operationId: api_repairs_worklogs_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkLog'
          description: ''
    post:
      operationId: api_repairs_worklogs_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkLog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkLog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkLog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkLog'
          description: ''
  /api/token:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/workers:
    get:
      operationId: api_workers_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Worker'
          description: ''
    post:
      operationId: api_workers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Worker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Worker'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
          description: ''
  /api/workers/{id}:
    get:
      operationId: api_workers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
          description: ''
    put:
      operationId: api_workers_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Worker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Worker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Worker'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
          description: ''
    patch:
      operationId: api_workers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorker'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorker'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorker'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Worker'
          description: ''
    delete:
      operationId: api_workers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Car:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vin_number:
          type: string
          nullable: true
          maxLength: 17
        production_date:
          type: string
          format: date
          nullable: true
        producer:
          type: string
          nullable: true
          maxLength: 40
        model:
          type: string
          nullable: true
          maxLength: 30
        version:
          type: string
          nullable: true
          maxLength: 30
        generation:
          type: string
          nullable: true
          maxLength: 30
        horsepowers:
          type: string
          nullable: true
          maxLength: 15
        color:
          type: string
          nullable: true
          maxLength: 30
        registration_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        displacement_in_litres:
          type: string
          nullable: true
          maxLength: 5
        mileage:
          type: string
          nullable: true
          maxLength: 10
        owner:
          type: integer
      required:
      - id
      - owner
      - registration_date
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        company_name:
          type: string
          nullable: true
          maxLength: 100
        company_id:
          type: string
          nullable: true
          maxLength: 15
        postal_code:
          type: string
          nullable: true
          maxLength: 6
        city:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
          maxLength: 50
        street_number:
          type: string
          nullable: true
          maxLength: 10
        registration_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - registration_date
      - user
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        visible_for_client:
          type: boolean
        creation_date:
          type: string
          format: date-time
          readOnly: true
        value:
          type: string
        creator:
          type: integer
        repair:
          type: integer
      required:
      - creation_date
      - creator
      - id
      - repair
      - value
    Manager:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
      required:
      - id
      - user
    NullEnum:
      enum:
      - null
    PatchedCar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vin_number:
          type: string
          nullable: true
          maxLength: 17
        production_date:
          type: string
          format: date
          nullable: true
        producer:
          type: string
          nullable: true
          maxLength: 40
        model:
          type: string
          nullable: true
          maxLength: 30
        version:
          type: string
          nullable: true
          maxLength: 30
        generation:
          type: string
          nullable: true
          maxLength: 30
        horsepowers:
          type: string
          nullable: true
          maxLength: 15
        color:
          type: string
          nullable: true
          maxLength: 30
        registration_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        displacement_in_litres:
          type: string
          nullable: true
          maxLength: 5
        mileage:
          type: string
          nullable: true
          maxLength: 10
        owner:
          type: integer
    PatchedClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        company_name:
          type: string
          nullable: true
          maxLength: 100
        company_id:
          type: string
          nullable: true
          maxLength: 15
        postal_code:
          type: string
          nullable: true
          maxLength: 6
        city:
          type: string
          nullable: true
          maxLength: 50
        street:
          type: string
          nullable: true
          maxLength: 50
        street_number:
          type: string
          nullable: true
          maxLength: 10
        registration_date:
          type: string
          format: date-time
          readOnly: true
    PatchedRepair:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
        registration_date:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        car:
          type: integer
        workers:
          type: array
          items:
            type: integer
    PatchedWorker:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
    Repair:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
        registration_date:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        car:
          type: integer
        workers:
          type: array
          items:
            type: integer
      required:
      - car
      - end_date
      - id
      - registration_date
      - start_date
    RepairActivityLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
        type:
          type: string
          maxLength: 13
        repair:
          type: integer
        user:
          type: integer
      required:
      - description
      - id
      - repair
      - time
      - type
      - user
    RepairImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          maxLength: 100
        creation_date:
          type: string
          format: date-time
          readOnly: true
        repair:
          type: integer
        user:
          type: integer
          nullable: true
      required:
      - creation_date
      - description
      - id
      - repair
    StatusEnum:
      enum:
      - Oczekująca
      - W trakcie
      - Wykonana
      type: string
      description: |-
        * `Oczekująca` - Oczekująca
        * `W trakcie` - W trakcie
        * `Wykonana` - Wykonana
    TokenObtainPair:
      type: object
      properties:
        
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
    WorkLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        comment:
          type: string
          nullable: true
        worker:
          type: integer
        repair:
          type: integer
      required:
      - end_date
      - id
      - repair
      - start_date
      - worker
    Worker:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
      required:
      - id
      - user
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
